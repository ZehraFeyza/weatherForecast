{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/havadurumu/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Form, Button, Row, Col, Card, Spinner } from 'react-bootstrap';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false); //Apı ye baglanıncaya kadar dönen bir spinner icin state tanımladım\n\n  const navigate = useNavigate(); //sayfa yönlendirmesini tutan state\n\n  const initialValues = {\n    //Formun ilk degerleeinin oluştugu yer boş gelecek\n    email: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object({\n    //email ve sifre için şartlarımızı(validasyonlarımızı) tanımladık\n    email: Yup.string().email().required(\"please enter your email\"),\n    password: Yup.string().required(\"please Your password must be a minimum of 6 letters\").min(6)\n  });\n\n  const onSubmit = values => {\n    //buton submit oldugunda email ve sifredeki\n    // value larformik e baglanıp  validasyonlar ile eşleşip\n    // eşleşmediği kontrol edilecek onay alınorsa server a gönderilecek\n    setLoading(true);\n    console.log(values);\n    const email = \"zehra@gmail.com\";\n    const password = \"1907\";\n\n    if (email === values.email && password == values.password) {\n      localStorage.setItem(\"email\", email);\n      localStorage.setItem(\"password\", password);\n      navigate(\"/search\"); //tüm validasyonlar saglanırsa sayfalar arası geciş ok\n    } else {\n      setLoading(false);\n      navigate(\"/\");\n    }\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  }); //useFormigimizi burada kullanıyoruz\n  //formik e bu 3 degerimizi gönderiyoruz, formik ise bu 3 degeri alarak kendı\n  //stateleri ayarlıyor, kontrole hazır hale geltiriyor\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \" mt-5  text-center\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        lg: {\n          span: 4,\n          offset: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"f\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" Anl\\u0131k Hava Tahmini\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true,\n              onSubmit: formik.handleSubmit //!noValidate: htlml-5 den gelen default tarayici kontrolünü \n              //devredişi birakmak için kullaniliyor\n              //formun submit butonuna bastiğimizda normalde backende gönderir fakar \n              //biz formda baska bir onSubmit fonksiyonu tanimladigimiz için butonuna\n              //bastiğimizda öncelikle bu submit fonksiyonuna bakar\n              //!onSubmit={formik.handleSubmit}  : bu kod blogu ile biz diyoruz ki , bu submit\n              //!işi ile ilgili görevli kişi formiktir,formik in handleSubmit adinda \n              //!bir fonksiyonu var onu görevlendiriyoruz,handleSubmit formdaki bilgilerin\n              //!backende gitmesini engelliyor,kendi sistemini devreye sokar,kendi validasyonunu\n              //!yapiyor,eger bu validasyondan gecemez ise kendi belirlediği hata mesajlarini veriyor\n              //!eger gecebilir ise  Formik e bagli onSubmit  fonksiyonunu  caliştiriyor,\n              //!onSubmiti de API ye baglamiş olacagiz\n              ,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  ...formik.getFieldProps(\"email\"),\n                  //kullanıcının girdigi dgeri alır formikdeki tanımlanmıs deger ile degistirir\n                  //yani field proplarını getirir\n                  isInvalid: !!formik.errors.email //ısInvalıid: formik de  kontrol yapan koddur,formik de hataları tutatn \n                  //errors adında bir kod ıle bırlıkte kullanılır,\"formik.errors.email\" ifadesi\n                  //string bir ifadedir mantıksal operatöre cevırmek içinbasına \"!\" ifadesi koyarız\n                  // bir tane ünlem false degeri döndürür ikinci ünlemi aldıgımızda  degilinin degili mantıgıyla true deger dondurur\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  children: [\" \", formik.errors.email, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formBasicPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  ...formik.getFieldProps(\"password\"),\n                  isInvalid: !!formik.errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  children: formik.errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                disabled: loading // loading state i  apıye baglanma surecinde iken butonu disaqbled yapacak\n                //eger loading olmuş ise kullanıcı spinner ı göstersın\n                ,\n                children: [\" \", loading && /*#__PURE__*/_jsxDEV(Spinner, {\n                  animation: \"border\",\n                  size: \"sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 17\n                }, this), \"Kaydol\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"CXUB/LldsKGer6qAZ4ZIOELnzEg=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/macos/Desktop/havadurumu/src/components/Login.js"],"names":["React","useState","Container","Form","Button","Row","Col","Card","Spinner","useFormik","Yup","useNavigate","Login","loading","setLoading","navigate","initialValues","email","password","validationSchema","object","string","required","min","onSubmit","values","console","log","localStorage","setItem","formik","span","offset","handleSubmit","getFieldProps","errors"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Container, Form,Button, Row,Col, Card, Spinner } from 'react-bootstrap';\nimport {useFormik} from \"formik\";\nimport * as  Yup from \"yup\";\nimport { useNavigate } from 'react-router-dom';\n\n\nconst Login = () => {\nconst [loading, setLoading] = useState(false);//Apı ye baglanıncaya kadar dönen bir spinner icin state tanımladım\nconst navigate=useNavigate();//sayfa yönlendirmesini tutan state\nconst initialValues={//Formun ilk degerleeinin oluştugu yer boş gelecek\n  email:\"\",\n  password:\"\"\n}\n\nconst validationSchema=Yup.object({//email ve sifre için şartlarımızı(validasyonlarımızı) tanımladık\n  email:Yup.string().email().required(\"please enter your email\"),\n  password:Yup.string().required(\"please Your password must be a minimum of 6 letters\").min(6),\n\n});\nconst onSubmit=(values)=>{//buton submit oldugunda email ve sifredeki\n  // value larformik e baglanıp  validasyonlar ile eşleşip\n  // eşleşmediği kontrol edilecek onay alınorsa server a gönderilecek\nsetLoading(true);\nconsole.log(values);\nconst email=\"zehra@gmail.com\";\nconst password=\"1907\";\nif(email===values.email  && password==values.password){\n  localStorage.setItem(\"email\",email);\n  localStorage.setItem(\"password\",password);\n  navigate(\"/search\")//tüm validasyonlar saglanırsa sayfalar arası geciş ok\n \n}\nelse{\n  setLoading(false);\n  navigate(\"/\")\n}\n}\n\nconst formik=useFormik({initialValues,validationSchema,onSubmit})//useFormigimizi burada kullanıyoruz\n//formik e bu 3 degerimizi gönderiyoruz, formik ise bu 3 degeri alarak kendı\n//stateleri ayarlıyor, kontrole hazır hale geltiriyor\n\n\n\n\n  return (\n  <Container  className=\" mt-5  text-center\">\n    <Row>\n      <Col md={{span:6, offset:3}}  lg={{span:4,offset:4}} >\n       \n   <Card className='f'>\n     <Card.Body>\n    <h1> Anlık Hava Tahmini</h1><br/>\n    <Form noValidate onSubmit={formik.handleSubmit}\n      //!noValidate: htlml-5 den gelen default tarayici kontrolünü \n      //devredişi birakmak için kullaniliyor\n      //formun submit butonuna bastiğimizda normalde backende gönderir fakar \n      //biz formda baska bir onSubmit fonksiyonu tanimladigimiz için butonuna\n      //bastiğimizda öncelikle bu submit fonksiyonuna bakar\n      //!onSubmit={formik.handleSubmit}  : bu kod blogu ile biz diyoruz ki , bu submit\n      //!işi ile ilgili görevli kişi formiktir,formik in handleSubmit adinda \n      //!bir fonksiyonu var onu görevlendiriyoruz,handleSubmit formdaki bilgilerin\n      //!backende gitmesini engelliyor,kendi sistemini devreye sokar,kendi validasyonunu\n      //!yapiyor,eger bu validasyondan gecemez ise kendi belirlediği hata mesajlarini veriyor\n      //!eger gecebilir ise  Formik e bagli onSubmit  fonksiyonunu  caliştiriyor,\n      //!onSubmiti de API ye baglamiş olacagiz\n>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" \n    {...formik.getFieldProps(\"email\")}//kullanıcının girdigi dgeri alır formikdeki tanımlanmıs deger ile degistirir\n    //yani field proplarını getirir\n    isInvalid={!!formik.errors.email}\n    //ısInvalıid: formik de  kontrol yapan koddur,formik de hataları tutatn \n    //errors adında bir kod ıle bırlıkte kullanılır,\"formik.errors.email\" ifadesi\n    //string bir ifadedir mantıksal operatöre cevırmek içinbasına \"!\" ifadesi koyarız\n    // bir tane ünlem false degeri döndürür ikinci ünlemi aldıgımızda  degilinin degili mantıgıyla true deger dondurur\n     />\n    <Form.Control.Feedback> {formik.errors.email} </Form.Control.Feedback>\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\"\n    {...formik.getFieldProps(\"password\")} \n     isInvalid={!!formik.errors.password} />\n    <Form.Control.Feedback>\n      {formik.errors.password}\n    </Form.Control.Feedback>\n  </Form.Group>\n \n  <Button  variant=\"primary\" type=\"submit\" disabled={loading}// loading state i  apıye baglanma surecinde iken butonu disaqbled yapacak\n  //eger loading olmuş ise kullanıcı spinner ı göstersın\n  > {loading && <Spinner animation=\"border\" size=\"sm\"/>}\n   \n    Kaydol\n  </Button>\n</Form>\n</Card.Body>\n</Card>\n</Col>\n</Row>\n  </Container>\n        );\n      }\n      \n      \n \n\nexport default Login"]},"metadata":{},"sourceType":"module"}